// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id            String     @id @default(uuid()) @db.Uuid
  name          String
  products      Product[]  @relation("productCategory")
  parentId      String?    @db.Uuid
  parent        Category?  @relation("subCategory", fields: [parentId], references: [id], onDelete: Cascade)
  subCategories Category[] @relation("subCategory")
}

model Product {
  id          String  @id @default(uuid()) @db.Uuid
  name        String
  description String?
  price       Float
  weight      Float   @default(0)
  length      Float   @default(0)
  active      Boolean @default(true)
  image       String

  categories Category[] @relation("productCategory")

  parentId   String?   @db.Uuid
  parent     Product?  @relation("productRelation", fields: [parentId], references: [id], onDelete: Cascade)
  subProduct Product[] @relation("productRelation")

  orderItems OrderItem[]
}

model Order {
  id          String @id @default(uuid()) @db.Uuid
  totalAmount Float  @default(0)

  orderItems OrderItem[]
}

model OrderItem {
  id        String @id @default(uuid()) @db.Uuid
  quantity  Int
  price     Float
  subTotal  Float
  orderId   String @db.Uuid
  productId String @db.Uuid

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([orderId, productId])
}
  